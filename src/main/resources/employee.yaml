openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
    description: local server
paths:
  /employees:
    get:
      operationId: getEmployees
      summary: Get all employees
      description: Get all employees
      responses:
        '200':
          description: A list of employees
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelApiResponse'
              example:
                code: 200
                message: Employee updated
                data:
                  - id: 1
                    name: John Doe
                    age: 25
                    department: IT
                  - id: 2
                    name: Jane Doe
                    age: 23
                    department: HR
        '404':
          description: No employee found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelApiResponse'
              example:
                code: 404
                message: No employee found
        '500':
          description: Internal server error
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/ModelApiResponse'
                example:
                    code: 500
                    message: Internal server error
    post:
      operationId: createEmployee
      summary: Create a new employee
      description: Create a new employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
            example:
              name: John Doe
              age: 25
              department: IT
      responses:
        '201':
          description: Employee created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelApiResponse'
              example:
                code: 200
                message: Employee created
                data:
                  id: 1
                  name: John Doe
                  age: 25
                  department: IT
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelApiResponse'
              example:
                code: 405
                message: Invalid input
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelApiResponse'
              example:
                code: 500
                message: Internal server error
  /employees/{id}:
    get:
      operationId: getEmployeeById
      summary: Get an employee by ID
      description: Get an employee by ID
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the employee to retrieve
          schema:
            type: integer
            format: int64
            example: 1
      responses:
          '200':
            description: A single employee
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ModelApiResponse'
                example:
                  code: 200
                  message: Employee found
                  data:
                      id: 1
                      name: John Doe
                      age: 25
                      department: IT
          '404':
            description: No employee found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ModelApiResponse'
                example:
                  code: 404
                  message: No employee found
          '500':
            description: Internal server error
            content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/ModelApiResponse'
                  example:
                      code: 500
                      message: Internal server error
    put:
      operationId: updateEmployee
      summary: Update an employee by ID
      description: Update an employee by ID
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the employee to update
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
            example:
              id: 1
              name: John Doe
              age: 25
              department: IT
      responses:
          '200':
            description: Employee updated
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ModelApiResponse'
                example:
                  code: 200
                  message: Employee updated
                  data:
                    id: 1
                    name: John Doe
                    age: 25
                    department: IT
          '404':
            description: No employee found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ModelApiResponse'
                example:
                  code: 404
                  message: No employee found
          '405':
            description: Invalid input
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ModelApiResponse'
                example:
                  code: 405
                  message: Invalid input
          '500':
            description: Internal server error
            content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/ModelApiResponse'
                  example:
                      code: 500
                      message: Internal server error
    delete:
      operationId: deleteEmployee
      summary: Delete an employee by ID
      description: Delete an employee by ID
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the employee to delete
          schema:
            type: integer
            format: int64
            example: 1
      responses:
          '200':
            description: Employee deleted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ModelApiResponse'
                example:
                  code: 200
                  message: Employee updated
                  data:
                    id: 1
                    name: John Doe
                    age: 25
                    department: IT
          '404':
            description: No employee found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ModelApiResponse'
                example:
                  code: 404
                  message: No employee found
          '500':
            description: Internal server error
            content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/ModelApiResponse'
                  example:
                      code: 500
                      message: Internal server error
components:
    schemas:
        Employee:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
              description: ID of the employee auto-generated
            name:
              type: string
              example: John Doe
              description: Name of the employee
            age:
              type: integer
              format: int32
              example: 25
              description: Age of the employee
            department:
              type: string
              example: IT
              description: Department of the employee
              enum:
                - IT
                - HR
                - Finance
                - Marketing
          required:
            - name
            - age
            - department
        ModelApiResponse:
          type: object
          properties:
            code:
              type: integer
              format: int32
              example: 200
              description: APIResponse code
            message:
              type: string
              example: Not found
              description: APIResponse message
            data:
              type: array
              example:
                id: 1
                name: John Doe
                age: 25
                department: IT
              description: APIResponse data
              items:
                $ref: '#/components/schemas/Employee'
          required:
            - code
            - message
